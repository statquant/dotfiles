"---------------------------------------------------------------
" NVIMR
"---------------------------------------------------------------
" treat qmd files as rmd files
autocmd BufRead,BufNewFile *.qmd set filetype=rmd
" split horizontally
let R_rconsole_width = 0
" use or 'R' or 'radian' for app
let R_app = "R" 
let R_cmd = "R"
let R_hl_term = 0
" arguments to be passed to R_cmd
let R_args = ['--no-save', '--quiet']
let R_bracketed_paste = 1
" classic <- shortcut
let R_assign_map = '<M-->'
" still use tmux to run R (as opposed to terminal)
let R_source = '~/.vim/plugged/Nvim-R/R/tmux_split.vim'
" in normal mode <Space> send line and go to start of next line
autocmd filetype r,rmd,rnoweb nmap <Space> :call SendLineToR("down")<CR>
" in any mode <Ctrl><CR> send line and go to start of next line in the same mode
" see https://github.com/jalvesaq/Nvim-R/issues/64 
"autocmd filetype r,rmd,rnoweb nmap <silent>  :call SendLineToR("down")<CR>
"autocmd filetype r,rmd,rnoweb imap <silent>  <Esc>:call SendLineToR("down")<CR>i
"autocmd filetype r,rmd,rnoweb vmap <silent>  :call SendSelectionToR("silent", "stay")<CR>
"autocmd filetype r,rmd,rnoweb nmap <silent> zd :call g:SendCmdToR("devtools::document(here::here())")<CR>
autocmd filetype r,rmd,rnoweb nmap <silent> <LocalLeader><CR> :call SendLineToR("down")<CR>
autocmd filetype r,rmd,rnoweb imap <silent> <LocalLeader><CR> <Esc>:call SendLineToR("stay")<CR>0ji
autocmd filetype r,rmd,rnoweb vmap <silent> <LocalLeader><CR> :call SendSelectionToR("silent", "down")<CR>
autocmd filetype r,rmd,rnoweb nmap <silent> zd :call g:SendCmdToR("devtools::document(here::here())")<CR>

" set some tag dir
autocmd filetype r,rmd,rnoweb set tags+=~/.cache/Nvim-R/Rtags,~/.rtags/
" remove preview window in R
" 20200628 remove this when trying language server
" autocmd filetype r,rmd,rnoweb set completeopt-=preview
 
" function to convert R to Rmd using spin
" I realized <LocalLeader>ks does the same thing but knit = TRUE is causing
" issues
function! R_To_Rmd()
  let file = expand('%:p')
  let command = "R --vanilla --quiet -e 'knitr::spin(\"" . file . "\", format = \"Rmd\", knit = FALSE)'"
  execute "silent !" . command
endfunction
autocmd filetype r nmap <LocalLeader>sp :call R_To_Rmd() <CR>
autocmd filetype r imap <LocalLeader>sp :call R_To_Rmd() <CR>

" Function that runs jupytext and will create {R, Rmd, ipynb} triplet and sync
" things out
" Typically create any one of the 3 format, press <LocalLeader>ju to create
" the other 2 then alternate across 3 files and update one or the other, press
" <LocalLeader>ju to update the other 2
function! Run_Jupytext()
  let file = expand('%:p')
  let command = "jupytext --set-formats R:spin,ipynb,Rmd --sync " . file
  execute "silent !" . command
endfunction
autocmd filetype r,rmd,rnoweb nmap <LocalLeader>ju :call Run_Jupytext() <CR>
autocmd filetype r,rmd,rnoweb imap <LocalLeader>ju :call Run_Jupytext() <CR>

function! R_Render()
  let file = expand('%:p')
  let command = "R --vanilla --quiet -e 'rmarkdown::render(input = \"" . file . "\")'"
  execute "!" . command
endfunction
autocmd filetype r,rmd,rnoweb nmap <LocalLeader>rr :call R_Render() <CR>
autocmd filetype r,rmd,rnoweb imap <LocalLeader>rr :call R_Render() <CR>

