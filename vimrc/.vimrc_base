"---------------------------------------------------------------
" GLOBAL LOGIC
"---------------------------------------------------------------
" Attempt to determine the type of a file based on its name and possibly its
" contents. Use this to allow intelligent auto-indenting for each filetype,
" and for plugins that are filetype specific.
filetype plugin on
filetype indent on

"The 'syntax enable' command will keep your current color settings. This
"allows using 'highlight' commands to set your preferred colors before or
"after using this command. If you want Vim to overrule your settings with the
"defaults, use syntax on
syntax enable

" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

"ttimeoutlen' 'ttm'	number	(default -1, set to 100 in |defaults.vim|)global
" The time in milliseconds that is waited for a key code or mapped key
" sequence to complete. Also used for CTRL-\ CTRL-N and CTRL-\ CTRL-G when part of a command has been typed.
set ttimeoutlen=0

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

"---------------------------------------------------------------
" INDENTATION LOGIC
" http://www.vim.org/scripts/script.php?script_id=231
"---------------------------------------------------------------
set noexpandtab
"set cindent "2016-05-06 I am not sure I ever need auto indentation http://vim.wikia.com/wiki/Indenting_source_code
"set cinoptions=(0,u0,U0)
set tabstop=4 " To cause the TAB file-character to be displayed as mod-N in vi and vim
set softtabstop=4 " Standard vi interprets the tab key literally, but there are popular
"                   vi-derived alternatives that are smarter, like vim. To get vim to interpret
"                   tab as an ``indent'' command instead of an insert-a-tab command
set shiftwidth=4 " To set the mod-N indentation used when you hit the tab key in vim
"                  forbid the automatic comment
"disable automatic comment insertion (this is alright because we can use NERDCommenter anyway)
"http://vim.wikia.com/wiki/Disable_automatic_comment_insertion
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

"---------------------------------------------------------------
" MOUSE AND OTHER STUFF
" http://nvie.com/posts/how-i-boosted-my-vim/
"---------------------------------------------------------------
set bs=2 " To enable backspace == delete
set scrolloff=999 " Always have the cursor in middle of the screen
set showmatch " set show matching parenthesis
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode " Show partial commands in the last line of the screen
set hidden " It hides buffers instead of closing them
set history=1000 " remember more commands and search history
set undolevels=1000 " use many muchos levels of undo
set visualbell " don't beep
set noerrorbells " don't beep
set colorcolumn=100 " print red column at column 100
" set wildignore=*.swp,*.bak,*.pyc,*.class

"---------------------------------------------------------------
" SAVE LOGIC
"---------------------------------------------------------------
set nobackup " no backup
set noswapfile " no swap
set nowritebackup
set autoread " automaticaly load files edited outside vim

"---------------------------------------------------------------
" BUFFER LOGIC
"---------------------------------------------------------------
" circulate buffers in normal mode
nmap <C-S-Left> :bprevious <CR>
nmap <C-S-Right> :bnext <CR>
" circulate buffers in insert mode
imap <C-S-Left> <Esc>:bprevious <CR>i
imap <C-S-Right> <Esc>:bnext <CR>i

"--------------------------------------------------------------
" TERMINAL MODE LOGIC
"--------------------------------------------------------------
" I use <Esc><Esc> because just using <Esc> causes arrow keys to be useless in window logic
tmap <Esc><Esc> <C-\><C-n> 

"---------------------------------------------------------------
" WINDOW LOGIC
"---------------------------------------------------------------
" circulate windows in normal mode
nmap <C-Left> <C-w>h
nmap <C-Right> <C-w>l
nmap <C-Up> <C-w>k
nmap <C-Down> <C-w>j
" circulate windows in insert mode
imap <C-Left> <Esc><C-w>hi
imap <C-Right> <Esc><C-w>li
imap <C-Up> <Esc><C-w>ki
imap <C-Down> <Esc><C-w>ji
" circulate from terminal to other windows
" you cannot have <C-\><C-n> mapped to <Esc> as typing arrow keys results in a sequence that starts 
" with Esc
tmap <C-Left> <C-\><C-n><C-w>hi
tmap <C-Right> <C-\><C-n><C-w>li
tmap <C-Up> <C-\><C-n><C-w>ki
tmap <C-Down> <C-\><C-n><C-w>ji

"---------------------------------------------------------------
" SEARCH LOGIC
"---------------------------------------------------------------
set hlsearch " highlight search terms
set incsearch " show search matches as you type
set ignorecase " ignore case when searching
set smartcase " ignore case if search pattern is all lowercase,
" case-sensitive otherwise tired of clearing highlighted searches by searching for ldsfhjkhgakjk
nmap <silent> /# :nohlsearch<CR> 

"-----------------------------------------------------------------------
" COLORSCHEME LOGIC
"-----------------------------------------------------------------------
" allow xterm 256 color (has to match tmux)
set term=xterm-256color
" fix background problem http://superuser.com/questions/399296/256-color-support-for-vim-background-in-tmux
set t_ut=

"---------------------------------------------------------------
" STATUS LINE LOGIC => 2016-04-19 DEPRECATED CAUSE VIMAIRLINE
" http://www.point-libre.org/~dimitri/blog/index.php/2006/08/01/138
" http://stackoverflow.com/questions/9065941/how-can-i-change-vim-status-line-colour
"---------------------------------------------------------------
" dialogue asking if you wish to save changed files.
set confirm
" Set the command window height to 2 lines, to avoid many cases of having to
" 'press <Enter> to continue'
set cmdheight=2
" Always display the status line, even if only one window is displayed
set laststatus=2

"---------------------------------------------------------------
" FOLD LOGIC
"---------------------------------------------------------------
set foldmethod=indent
set foldlevel=99
set foldmarker={,}

"----------------------------------------------------------------------
" MARKING LOGIC
" see http://www.linux.com/archive/articles/54159
"----------------------------------------------------------------------
set viminfo='100,f1

"-----------------------------------------------------------------------
"VIMDIFF
"http://blog.objectmentor.com/articles/2008/04/30/vim-as-a-diff-merge-tool
"-----------------------------------------------------------------------
"2013-09-28: I had to had this so that vim knows where to find a diff.exe
if &diff
        colorscheme evening
endif
set diffopt=filler
set diffopt+=iwhite

"---------------------------------------------------------------
" MAPS
"---------------------------------------------------------------
"display date
inoremap <Leader>date <C-R>=strftime("%Y-%m-%d")<CR>
inoremap <Leader>time <C-R>=strftime("%H:%M:%S")<CR>
inoremap <Leader>dt <C-R>=strftime("%Y-%m-%d %H:%M:%S")<CR>

"allow easier moving blocks of code
vnoremap < <gv
vnoremap > >gv

"---------------------------------------------------------------
" ORTHOGRAPHE
"---------------------------------------------------------------
"http://blog.fedora-fr.org/metal3d/post/Correction-orthographique-et-grammaticale-avec-Vim
"this function allow to switch between french/english dictinaries easily
function! <SID>ToggleSpell()
        let spelllang_list = [ 'fr', 'en' ]
        let string = []
        for i in range(len(spelllang_list))
                call add(string, i+1 . ") " . spelllang_list[i])
        endfor
        if ! &spell
                let &spell = 1
                let selection = inputlist(string)
                let &spelllang = spelllang_list[selection-1]
        else
                let &spell = 0
                echo "'spell' disabled..."
        endif
endfunction
noremap <MapLeader>or :call <SID>ToggleSpell()<CR>

"This allow easy spell fixing, in insert mode and normal mode
imap <c-f> <c-g>u<Esc>[s1z=`]a<c-g>u
nmap <c-f> [s1z=<c-o>
"let g:languagetool_jar='$VIM\LanguageTool-2.2\languagetool-commandline.jar'

